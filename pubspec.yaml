name: flutter_notes_app
description: Domain-Driven Design + Firebase Flutter Course - ResoCoder

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.8.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter

  # AutoRoute is a declarative routing solution, where everything needed for navigation is automatically generated for you.
  auto_route: ^0.6.7

  # A Flutter plugin to use the Cloud Firestore API.
  cloud_firestore: ^0.14.0+2

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^0.1.3

  # Functional programming in Dart
  dartz: ^0.9.1

  # A Flutter plugin to use the Firebase Authentication API.
  firebase_auth: ^0.18.0+1

  # A Flutter plugin to use the Firebase Core API, which enables connecting to multiple Firebase apps.
  firebase_core: ^0.5.0

  # Use this package if you need more customization when notifying your user.
  flushbar: ^1.10.4

  # Widgets that make it easy to integrate blocs and cubits. Built to work with package:bloc.
  flutter_bloc: ^6.0.1

  # A Flutter implementation of React hooks. Hooks are a new kind of object that manages a Widget life-cycles.
  flutter_hooks: ^0.14.1

  # deal with immutable objects
  freezed_annotation: ^0.11.0+1

  # This is a simple Service Locator for Dart and Flutter projects with some additional goodies highly inspired by Splat
  get_it: ^4.0.4

  # A Flutter plugin for Google Sign In.
  google_sign_in: ^4.5.3

  # Injectable is a convenient code generator for get_it
  injectable: ^1.0.4

  # Defines the annotations used by json_serializable to create code for JSON serialization and deserialization.
  json_annotation: ^3.0.1

  # A wrapper around InheritedWidget to make them easier to use and more reusable.
  provider: ^4.3.2+2

  # RxDart adds additional capabilities to Dart Streams and StreamControllers.
  rxdart: ^0.24.1

  # Simple, fast generation of RFC4122 UUIDs.
  uuid: ^2.2.2

dev_dependencies:
  flutter_test:
    sdk: flutter

  # AutoRoute is a declartive routing solution, where everything needed for navigation is automatically generated for you.
  auto_route_generator: ^0.6.8
  
  # $:> flutter pub run build_runner watch --delete-conflicting-outputs
  build_runner: null

  # code generator for unions/pattern-matching/copy
  freezed: ^0.11.5

  # A generator for injectable library.
  injectable_generator: ^1.0.4

  # Provides Dart Build System builders for handling JSON.
  json_serializable: ^3.4.1

  # lint is a hand-picked, open-source, community-driven collection of lint rules for Dart and Flutter projects
  lint: ^1.2.0
  

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# The following section is specific to Flutter.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages
  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
